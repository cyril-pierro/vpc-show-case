name: TerraForm Workflow
run-name: ${{ github.actor }} is running Workflow
on:
  push:
    branches:
      - dev
      - staging
      - production
  pull_request:
    branches:
      - dev
      - staging
      - prod

env:
  AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
  AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
  AWS_DEFAULT_REGION: "${{ secrets.AWS_DEFAULT_REGION }}"

jobs:
  run_validation_and_deploy:
    if: github.event.pull_request.merged == true || ${{ github.event_name }} == 'push'
    name: Set Up, Configure and Deploy Resources
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install and Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Install Terrascan binaries
        run: |
          curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
          tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
          sudo install terrascan /usr/local/bin && rm terrascan

      - name: Lint Terraform code
        run: |
          cd setup
          echo Running Initialization Of Terraform
          terraform init
          echo Running Format script for Terraform
          terraform fmt -check -recursive .
          echo Running validation of Terraform
          terraform validate
                
      - name: Perform security vulnerability scan
        run: |
          cd setup
          terrascan scan --iac-type terraform --severity high
      
      - name: Extract Environment from Branch Name
        shell: bash
        run: |
          echo "environment=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_environment
      
      - name: Setup Go 1.21.x
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'

      - name: Install golang dependencies
        run: |
          cd test
          go get .

      - name: Run IAC tests
        env:
          TF_VAR‚Äç_environment: "${{ steps.extract_environment.outputs.environment }}"

        run: |
          cd test
          go build -v ./...
          go test

      - name: Deploy Resources
        run: |
          echo About to provision resources on ${{ steps.extract_environment.outputs.environment }} environment
          echo #################################################################
          echo Preview Resources to be Deployed
          echo #################################################################
          cd setup
          terraform plan
          echo #################################################################
          echo Start Deployment
          echo #################################################################
          terraform apply -auto-approve
          

          
        
        