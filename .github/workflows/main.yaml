name: TerraForm Workflow
run-name: ${{ github.actor }} is running Workflow
on:
  push:
    branches:
      - development
      - uat
      - production
  pull_request:
    branches:
      - development
      - uat
      - production

jobs:
  run_validation_and_deploy:
    if: github.event.pull_request.merged == true || ${{ github.event_name }} == 'push'
    name: Set Up, Configure and Deploy Resources
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Terraform binary and app dependencies
        run: |
          sudo apt update && sudo apt upgrade -y
          sudo apt install -y curl software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform 

          wget https://go.dev/dl/go1.21.3.linux-amd64.tar.gz
          rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.21.3.linux-amd64.tar.gz
          export PATH=$PATH:/usr/local/go/bin

          curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
          tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
          sudo install terrascan /usr/local/bin && rm terrascan

      - name: Lint Terraform code
        run: |
          cd setup
          echo Running Initialization Of Terraform
          terraform init
          echo Running Format script for Terraform
          terraform fmt -check -recursive .
          echo Running validation of Terraform
          terraform validate
                
      - name: Perform security vulnerability scan
        run: |
          cd setup
          terrascan scan --iac-type terraform --severity high
      
      - name: Extract Environment from Branch Name
        shell: bash
        run: |
          echo "environment=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_environment

      - name: Run tests
        run: |
          export TF_VAR‍_environment='${{ steps.extract_environment.outputs.environment }}' 
          echo $TF_VAR‍_environment
          cd tests
          go mod download
          CGO_ENABLED=0 go build
          go test

      - name: Deploy terraform code
        run: |
          echo About to provision resources on $TF_VAR‍_environment environment
          echo #################################################################
          echo Preview Resources to be Deployed
          echo #################################################################
          terraform plan
          echo #################################################################
          echo Start Deployment
          echo #################################################################
          cd ../setup; terraform apply -auto-approve
          

          
        
        